name: Android CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

env:
  GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError" -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true'

jobs:
  build-and-test-java:
    name: Build and Test Java Example
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false

      - name: Setup CI Credentials
        working-directory: Examples/Example-Java
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Setting up CI credentials"
          cat > zettleSDK.gradle << EOF
          //    Zettle SDK CI Configuration

          ext.zettleSDK = [:]

          ext.zettleSDK.githubAccessToken = "${GITHUB_TOKEN}"
          ext.zettleSDK.clientId = "mock_client_id_for_ci"
          ext.zettleSDK.redirectUrlScheme = "mock_scheme"
          ext.zettleSDK.redirectUrlHost = "mock_host"
          EOF

      - name: Make gradlew executable
        working-directory: Examples/Example-Java
        run: chmod +x ./gradlew

      - name: Download Dependencies
        working-directory: Examples/Example-Java
        run: ./gradlew androidDependencies || echo "Some dependencies may not be available in CI"

      - name: Build Java Example
        working-directory: Examples/Example-Java
        run: ./gradlew assembleDebug assembleRelease

      - name: Run Unit Tests
        working-directory: Examples/Example-Java
        run: ./gradlew testDebugUnitTest testReleaseUnitTest || echo "No unit tests found, but task completed"

      - name: Run Lint
        working-directory: Examples/Example-Java
        run: ./gradlew lintDebug || echo "Lint issues found but continuing build"
        continue-on-error: true

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: java-test-results
          path: Examples/Example-Java/app/build/test-results/
          if-no-files-found: ignore

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: java-reports
          path: Examples/Example-Java/app/build/reports/
          if-no-files-found: ignore

      - name: Upload APKs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: java-apks
          path: Examples/Example-Java/app/build/outputs/apk/
          if-no-files-found: ignore

  build-and-test-kotlin:
    name: Build and Test Kotlin Example
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false

      - name: Setup CI Credentials
        working-directory: Examples/Example-Kotlin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Setting up CI credentials"
          cat > zettleSDK.gradle << EOF
          //    Zettle SDK CI Configuration

          ext.zettleSDK = [:]

          ext.zettleSDK.githubAccessToken = "${GITHUB_TOKEN}"
          ext.zettleSDK.clientId = "mock_client_id_for_ci"
          ext.zettleSDK.redirectUrlScheme = "mock_scheme"
          ext.zettleSDK.redirectUrlHost = "mock_host"
          EOF

      - name: Make gradlew executable
        working-directory: Examples/Example-Kotlin
        run: chmod +x ./gradlew

      - name: Download Dependencies
        working-directory: Examples/Example-Kotlin
        run: ./gradlew androidDependencies || echo "Some dependencies may not be available in CI"

      - name: Build Kotlin Example
        working-directory: Examples/Example-Kotlin
        run: ./gradlew assembleDebug assembleRelease

      - name: Run Unit Tests
        working-directory: Examples/Example-Kotlin
        run: ./gradlew testDebugUnitTest testReleaseUnitTest || echo "No unit tests found, but task completed"

      - name: Run Lint
        working-directory: Examples/Example-Kotlin
        run: ./gradlew lintDebug || echo "Lint issues found but continuing build"
        continue-on-error: true

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kotlin-test-results
          path: Examples/Example-Kotlin/app/build/test-results/
          if-no-files-found: ignore

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kotlin-reports
          path: Examples/Example-Kotlin/app/build/reports/
          if-no-files-found: ignore

      - name: Upload APKs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kotlin-apks
          path: Examples/Example-Kotlin/app/build/outputs/apk/
          if-no-files-found: ignore
